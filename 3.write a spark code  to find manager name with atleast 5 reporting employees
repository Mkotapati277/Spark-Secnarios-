package pack
import org.apache.hadoop.hive.ql.exec.UDF
import org.apache.spark.SparkConf
import org.apache.spark.SparkContext
import scala.io.Source
import org.apache.spark.sql.types.{HIVE_TYPE_STRING, IntegerType}
import org.apache.spark.sql.{Row, SparkSession, functions => F}
import org.apache.spark.sql.SparkSession
import org.apache.spark.sql.functions
import org.apache.spark.sql.expressions
import org.apache.spark.sql.expressions.Window
import org.apache.spark.sql.types.{StructType, StructField, IntegerType, StringType}
import org.apache.spark.sql.functions.{coalesce, col, count, dense_rank, exp, expr, monotonically_increasing_id, row_number, sum, to_date, window}
import org.apache.spark.sql.functions._
object Secanriospratice {
  def main(Args:Array[String]):Unit= {
    println("======Hello=======")

    // Initialize Spark session
    val conf = new SparkConf().setAppName("first").setMaster("local[*]")
      .set("spark.driver.host", "localhost")
      .set("spark.driver.allowMultipleContexts", "true")

    val sc = new SparkContext(conf)
    sc.setLogLevel("ERROR")

    val spark = SparkSession.builder.getOrCreate()
    import spark.implicits._

    // Sample data
    val data = Seq(
      (101, "John", "A", 102),
      (102, "Dan", "A", 101),
      (103, "James", "A", 101),
      (104, "Amy", "A", 101),
      (105, "Anne", "A", 101),
      (106, "Ron", "B", 101)
    )
    val df= data.toDF("id", "name", "dept", "manager")
    df.show()
// write a  scala spark code  to find manager name with atleast 5 reporting employees

    // Count reporting employees by manager
    val reportingCounts = df.groupBy("manager")
                  .agg(count("id").alias("employee_count"))
                  .filter($"employee_count" === 5)
                  .withColumnRenamed("manager","id")

    reportingCounts.show()

   // Join back to get Manager name
    val res = reportingCounts.join(df,reportingCounts("id")=== df("id"),"left")
      .select(df("name").alias("ManagerName"), reportingCounts("employee_count"))

      res.show()


  }
}
